{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_ALPHABETICALLY","SORT_BY_LENGTH","REVERSE","RESET","previousReverse","goodsFromServer","previousGoods","App","useState","sortMethod","isReverse","selectedSort","setSelectedSort","sortedGoods","goods","newGoods","isReverseSwitched","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","handleOnClick","event","target","name","hideReset","join","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKMA,EAAsB,QACtBC,EAAiB,SACjBC,EAAU,UACVC,EAAQ,QAEVC,GAAkB,EAETC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGEC,EAAa,UAAOD,GAiCXE,EAAM,WACjB,MAAwCC,mBAAS,CAC/CC,WAAY,GACZC,WAAW,IAFb,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EApCe,SAACC,EAAOL,EAAYC,GACzC,IAAIK,EAAQ,YAAOD,GACbE,EAAoBN,IAAcN,EAMxC,OAJIY,IACFZ,EAAkBM,GAGZD,GACN,KAAKT,EACHe,EAAWA,EAASE,MAAK,SAACC,EAAOC,GAAR,OAAmBT,EACxCS,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,MACxB,MACF,KAAKlB,EACHc,EAAWL,EACPK,EAASE,OACRA,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAAQC,UACrDP,EAASE,OACRA,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UACjD,MACF,KAAKlB,EACHY,EAAQ,UAAOV,GACf,MACF,QACEU,EAAWC,EAAoBD,EAASO,UAAYP,EAGxD,OAAOA,EAQaQ,CAClBjB,EACAK,EAAaF,WACbE,EAAaD,WAGfJ,EAAgBO,EAEhB,IAAMW,EAAgB,SAACC,GACjBA,EAAMC,OAAOC,OAAShB,EAAaF,aAInCgB,EAAMC,OAAOC,OAASzB,EACxBU,EAAgB,CACdH,WACEE,EAAaF,aAAeN,EAAQ,GAAKQ,EAAaF,WACxDC,WAAYC,EAAaD,YAG3BE,EAAgB,CACdH,WAAYgB,EAAMC,OAAOC,KACzBjB,UAAWC,EAAaD,YAIxBe,EAAMC,OAAOC,OAASxB,GACxBS,EAAgB,CACdH,WAAYgB,EAAMC,OAAOC,KACzBjB,WAAW,MAKXkB,EAAYvB,EAAgBwB,KAAK,MAAQhB,EAAYgB,KAAK,IAEhE,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,iBAAkBrB,EAAaF,aAAeT,EAC9C,0BACEW,EAAaF,aAAeT,IAEhCiC,QAAST,EACTG,KAAM3B,EARR,iCAaA,wBACE+B,KAAK,SACLD,UAAWE,IAAG,CACZ,oBAAqBrB,EAAaF,aAAeR,EACjD,6BACEU,EAAaF,aAAeR,IAEhCgC,QAAST,EACTG,KAAM1B,EARR,4BAaA,wBACE8B,KAAK,SACLD,UAAWE,IAAG,CACZ,oBAAqBrB,EAAaD,UAClC,8BAA+BC,EAAaD,YAE9CuB,QAAST,EACTG,KAAMzB,EAPR,sBAYE0B,GACA,wBACEG,KAAK,SACLD,UAAWE,IAAG,CACZ,mBAAoBrB,EAAaF,aAAeN,EAChD,4BAA6BQ,EAAaF,aAAeN,IAE3D8B,QAAST,EACTG,KAAMxB,EAPR,sBAaJ,6BACGU,EAAYqB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzJlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fd1fbada.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst SORT_ALPHABETICALLY = 'alpha';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\nconst RESET = 'reset';\n\nlet previousReverse = false;\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nlet previousGoods = [...goodsFromServer];\n\nconst getSortedGoods = (goods, sortMethod, isReverse) => {\n  let newGoods = [...goods];\n  const isReverseSwitched = isReverse !== previousReverse;\n\n  if (isReverseSwitched) {\n    previousReverse = isReverse;\n  }\n\n  switch (sortMethod) {\n    case SORT_ALPHABETICALLY:\n      newGoods = newGoods.sort((good1, good2) => (isReverse\n        ? good2.localeCompare(good1)\n        : good1.localeCompare(good2)));\n      break;\n    case SORT_BY_LENGTH:\n      newGoods = isReverse\n        ? newGoods.sort()\n          .sort((good1, good2) => good1.length - good2.length).reverse()\n        : newGoods.sort()\n          .sort((good1, good2) => good1.length - good2.length);\n      break;\n    case RESET:\n      newGoods = [...goodsFromServer];\n      break;\n    default:\n      newGoods = isReverseSwitched ? newGoods.reverse() : newGoods;\n  }\n\n  return newGoods;\n};\n\nexport const App = () => {\n  const [selectedSort, setSelectedSort] = useState({\n    sortMethod: '',\n    isReverse: false,\n  });\n  const sortedGoods = getSortedGoods(\n    previousGoods,\n    selectedSort.sortMethod,\n    selectedSort.isReverse,\n  );\n\n  previousGoods = sortedGoods;\n\n  const handleOnClick = (event) => {\n    if (event.target.name === selectedSort.sortMethod) {\n      return;\n    }\n\n    if (event.target.name === REVERSE) {\n      setSelectedSort({\n        sortMethod:\n          selectedSort.sortMethod === RESET ? '' : selectedSort.sortMethod,\n        isReverse: !selectedSort.isReverse,\n      });\n    } else {\n      setSelectedSort({\n        sortMethod: event.target.name,\n        isReverse: selectedSort.isReverse,\n      });\n    }\n\n    if (event.target.name === RESET) {\n      setSelectedSort({\n        sortMethod: event.target.name,\n        isReverse: false,\n      });\n    }\n  };\n\n  const hideReset = goodsFromServer.join('') === sortedGoods.join('');\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-info': selectedSort.sortMethod === SORT_ALPHABETICALLY,\n            'button is-info is-light':\n              selectedSort.sortMethod !== SORT_ALPHABETICALLY,\n          })}\n          onClick={handleOnClick}\n          name={SORT_ALPHABETICALLY}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-success': selectedSort.sortMethod === SORT_BY_LENGTH,\n            'button is-success is-light':\n              selectedSort.sortMethod !== SORT_BY_LENGTH,\n          })}\n          onClick={handleOnClick}\n          name={SORT_BY_LENGTH}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-warning': selectedSort.isReverse,\n            'button is-warning is-light': !selectedSort.isReverse,\n          })}\n          onClick={handleOnClick}\n          name={REVERSE}\n        >\n          Reverse\n        </button>\n\n        {!hideReset && (\n          <button\n            type=\"button\"\n            className={cn({\n              'button is-danger': selectedSort.sortMethod === RESET,\n              'button is-danger is-light': selectedSort.sortMethod !== RESET,\n            })}\n            onClick={handleOnClick}\n            name={RESET}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}